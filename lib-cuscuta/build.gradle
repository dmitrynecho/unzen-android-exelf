apply plugin: 'com.android.library'
apply from: 'zen-pack-elfs.gradle'
def soNames = ['jnifoo']
def elfsNames = ['exebar', 'exebaz']

android {
    namespace 'unzen.exelf.cuscuta'
    ndkVersion exelfNdkVersion
    defaultConfig {
        minSdkVersion 16
        compileSdk exelfCompileSdkVersion
        targetSdkVersion exelfTargetSdkVersion
        externalNativeBuild {
            ndkBuild {
                targets = soNames + elfsNames
            }
        }
    }
    buildTypes {
        debug {
            jniDebuggable true
            ndk {
                //noinspection ChromeOsAbiSupport
                abiFilters = baseAbis
            }
        }
        release {
            jniDebuggable false
            ndk {
                //noinspection ChromeOsAbiSupport
                abiFilters = baseAbis
            }
        }
    }
    externalNativeBuild {
        ndkBuild {
            path "src/main/cpp/Android.mk"
        }
    }
    ext.zenPackElfsList = elfsNames
    ext.zenPackSosList = soNames
}

tasks.register('cppVersions') {
    String template = "#ifndef %s%n#define %s%n%n#define %s \"%s\"%n%n#endif // %s"
    File header = file('src/main/cpp/global_version.h')
    inputs.property('globalVersion', baseVersion)
    outputs.file header
    doLast {
        String name = "GLOBAL_VERSION"
        String guard = "_GLOBAL_VERSION_H_"
        String version = 'UNZEN-VERSION-' + baseVersion
        header.write(String.format(template, guard, guard, name, version, guard))
    }
}
preBuild.dependsOn cppVersions