Understanding order of ELF generation steps. Search dirs containing ELF after build. Then search this dirs in tasks graph as outputs of tasks and watch at task execution order index.

Tasks graphs generated by "alephTasksGraphAssemble" and "alephTasksGraphBundle" and saved as "docs/tasks-graph-assemble.txt" and "docs/tasks-graph-bundle.txt".

find . -iname "libjnifoo.so"

./lib-cuscuta/build/intermediates/library_jni/debug/copyDebugJniLibsProjectOnly/jni/x86_64/libjnifoo.so
  - 217 :lib-cuscuta:copyDebugJniLibsProjectOnly
  - O: <lib>/intermediates/library_jni/debug/copyDebugJniLibsProjectOnly/jni
./lib-cuscuta/build/intermediates/merged_native_libs/debug/mergeDebugNativeLibs/out/lib/x86_64/libjnifoo.so
  - 212 :lib-cuscuta:mergeDebugNativeLibs
  - O: <lib>/intermediates/merged_native_libs/debug/mergeDebugNativeLibs/out
  - O: <lib>/intermediates/merged_test_only_native_libs/debug/mergeDebugNativeLibs/out
./lib-cuscuta/build/intermediates/cxx/Debug/3o5x166y/obj/local/x86_64/libjnifoo.so
  - 210 :lib-cuscuta:buildNdkBuildDebug[x86_64][exebar,exebaz,etc]
  - O: <lib>/intermediates/cxx/Debug/<hash>/obj/local/x86_64
./app/build/intermediates/stripped_native_libs/fatDebug/stripFatDebugDebugSymbols/out/lib/x86_64/libjnifoo.so
./app/build/intermediates/merged_native_libs/fatDebug/mergeFatDebugNativeLibs/out/lib/x86_64/libjnifoo.so

* * *

https://stackoverflow.com/questions/45753733/ext-in-buildscript-can-not-be-recognised-by-gradle-kotlin-dsl
https://medium.com/@nicosnicolaou/migration-from-groovy-to-kotlin-dsl-gradle-part-1-c065fe19fcb4
https://stackoverflow.com/questions/25600621/android-gradle-build-how-to-set-global-variables

* * *

TAG6. Java compiler version 21 has deprecated support for compiling with source/target version 8.
Try one of the following options:
    1. [Recommended] Use Java toolchain with a lower language version
    2. Set a higher source/target version
    3. Use a lower version of the JDK running the build (if you're not using Java toolchain)
For more details on how to configure these settings, see https://developer.android.com/build/jdks.
To suppress this warning, set android.javaCompile.suppressSourceTargetDeprecationWarning=true in gradle.properties.
warning: [options] source value 8 is obsolete and will be removed in a future release
warning: [options] target value 8 is obsolete and will be removed in a future release
warning: [options] To suppress warnings about obsolete options, use -Xlint:-options.
3 warnings

* * *

TAG5. Tasks graph instability. Tasks graph differs depending on whether we executed Android Studio "Build" action after last clean or not. Android Studio "Build" action may be a next list of tasks:
- :app:assembleFatDebug,
- :app:assembleFatDebugUnitTest,
- :lib-cuscuta:assembleDebug,
- :lib-cuscuta:assembleDebugUnitTest,
- :lib-cuscuta:assembleDebugAndroidTest,
- :app:assembleFatDebugAndroidTest

TAG3. Warning is inconsistent with current official docs and fixing this warning creates other errors.
- https://developer.android.com/build/build-variants#product-flavors
- //noinspection GrDeprecatedAPIUsage
- flavorDimensions "tier", "service", "country"

TAG4. Warning is inconsistent with current official docs.
- https://developer.android.com/build/build-variants#filter-variants
- //noinspection GrDeprecatedAPIUsage
- variantFilter { variant ->

May be interesting: lib-cuscuta/build/intermediates/cxx/Debug/<hash>/logs

When Android OS installs debug app builds it process arbitrary named binaries from APK, but on release app build it ignores everything except files named like solibs, i.e. "libname.so".

Android 10 W^X policy related links:
- https://github.com/termux/termux-packages/wiki/Termux-and-Android-10
- https://developer.android.com/about/versions/10/behavior-changes-10#execute-permission
- https://issuetracker.google.com/issues/128554619
- https://developer.android.com/ndk/guides/wrap-script

Looks like creating hard links without root was disabled since Android 6:
- https://seandroid-list.tycho.nsa.narkive.com/r5ZNxgkh/selinux-hardlink-brain-damage-in-android-m
- https://code.google.com/archive/p/android-developer-preview/issues/3150

* * *

AGP 4.1.2 and AGP 7.3.1 binary stripping details.

AGP 4.1.2 and AGP 7.3.1 gather solibs from all modules in "merged_native_libs" dir of app module and then performs stripping on them that places stripped solibs in "stripped_native_libs". You can see this by search in task execution log for forementioned dirs and see that stripping task runs after merge task.

In AGP 4.1.2, when project contains modules, they responsible for stripping their solibs on their own. You can search app build dir for solib names and you'll see that it contains only already stripped versions of solibs from modules that app depends on. However, strippend solibs from modules are copied in app's "merged_native_libs" dir, so app will redurantly run stripping on them second time.

In AGP 7.3.1, when project contains modules, stripping performed only once in app module, modules that app depends on no more perform redurant solib stripping.

* * *

Option "ndk.debugSymbolLevel" has no effect in library's "build.gradle", works only in application's "build.gradle".

* * *

Android APK types: universal, standalones, splits.

* * *

2024-12-27. Using "buildConfigField" and "BuildConfig" causes issues, values not updated without clean build, using "resValue" instead of "buildConfigField" solves problem.